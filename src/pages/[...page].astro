---
import BaseLayout from "../layouts/BaseLayout.astro";
import BlogPost from "../components/BlogPost.astro";
import Pagination from "../components/Pagination.astro";

export async function getStaticPaths({ paginate }) {
  const allPosts = await Astro.glob("../pages/posts/*.md");

  const sortedPosts = allPosts.sort(
    (a, b) =>
      new Date(b.frontmatter.pubDate).getTime() -
      new Date(a.frontmatter.pubDate).getTime()
  );
  return paginate(sortedPosts, {
    pageSize: 5,
  });
}

const { page } = Astro.props;

const title = "織夢者筆記";
---

<BaseLayout title="織夢者筆記">
  {
    page && (
      <ul class="blogpost">
        {page.data.map((post) => (
          <BlogPost
            key={post.url}
            url={post.url}
            title={post.frontmatter.title}
            description={post.frontatter?.description}
            image={post.frontmatter?.image}
            pubDate={post.frontmatter.pubDate.slice(0, 10)}
          />
        ))}
      </ul>
    )
  }
</BaseLayout>
<div class="blogpost-controller">
  <div class="currentpage">
    <div class="current">{page.currentPage}</div>

    <div class="slash">/</div>

    <div class="total">{page.lastPage}</div>
  </div>
  {page && <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />}
</div>

<style>
  .blogpost {
    margin: 35px 0;
  }

  .pagination {
    display: flex;
    justify-content: center;
    margin: 35px 0;
  }

  .pagination a {
    margin: 0 10px;
    text-decoration: none;
  }

  .pagination a.active {
    text-decoration: underline;
  }

  .blogpost-controller {
    display: grid;
    align-items: baseline;
  }

  .currentpage {
    display: flex;
    flex-direction: column;
    justify-content: start;
    justify-items: center;
    font-weight: bold;
  }

  .current,
  .total {
    padding-left: 5px;
  }

  .slash {
    padding: 6px;
  }
</style>
